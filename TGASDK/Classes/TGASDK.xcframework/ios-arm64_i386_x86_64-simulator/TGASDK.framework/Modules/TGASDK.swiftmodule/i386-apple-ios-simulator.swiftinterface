// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
// swift-module-flags: -target i386-apple-ios10.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name TGASDK
import AppLovinSDK
import Dispatch
import Foundation
import LocalAuthentication
import MobileCoreServices
import ObjectiveC
import Security
import Swift
import SystemConfiguration
@_exported import TGASDK
import UIKit
import UniformTypeIdentifiers
import WebKit
import _Concurrency
@_inheritsConvenienceInitializers @objc public class TGAConfiguration : ObjectiveC.NSObject {
  @objc public var lang: Swift.String
  @objc public var navigationTintColor: UIKit.UIColor
  @objc public var statusBarStyle: UIKit.UIStatusBarStyle
  @objc public var navigationBackImage: UIKit.UIImage?
  @objc override dynamic public init()
  @objc deinit
}
@objc public protocol TGASdkDelegate : ObjectiveC.NSObjectProtocol {
  @objc func tgaSdkInitSucceed()
  @objc func tgaSdkInitError(_ error: Foundation.NSError)
  @objc func tgaSdkGetAuthCode(completion: @escaping ((Swift.String?) -> Swift.Void))
  @objc func tgaSdkCloseGameCenter()
  @objc func tgaSdkOnLogout()
}
@_inheritsConvenienceInitializers @objc public class TGASdk : ObjectiveC.NSObject {
  @objc public static let shared: TGASDK.TGASdk
  @objc public var configuration: TGASDK.TGAConfiguration
  @objc public func initSdk(env: Swift.String? = nil, appKey: Swift.String, authCode: Swift.String? = nil, delegate: TGASDK.TGASdkDelegate)
  @objc public func logout()
  @objc public func openGameCenter(secUrl: Swift.String? = nil, secTitle: Swift.String? = nil)
  @objc override dynamic public init()
  @objc deinit
}
extension UIKit.UINavigationController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewWillLayoutSubviews()
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewDidLayoutSubviews()
}
infix operator <=> : DefaultPrecedence
